# Generated by Django 5.2 on 2025-06-16 16:40

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('STUDENT', '学生'), ('TEACHER', '教师'), ('ADMIN', '管理员')], default='STUDENT', max_length=10, verbose_name='角色')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '系统用户',
                'verbose_name_plural': '系统用户',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='关联用户账户')),
                ('student_id_num', models.CharField(max_length=50, unique=True, verbose_name='学号')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('id_card', models.CharField(max_length=18, unique=True, verbose_name='身份证号')),
                ('gender', models.CharField(choices=[('男', '男'), ('女', '女')], max_length=2, verbose_name='性别')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='电话')),
                ('dormitory', models.CharField(blank=True, max_length=100, null=True, verbose_name='宿舍')),
                ('home_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='家庭地址')),
                ('grade_year', models.IntegerField(blank=True, null=True, verbose_name='年级/入学年份')),
                ('degree_level', models.CharField(max_length=20, verbose_name='学位等级')),
                ('credits_earned', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, verbose_name='已修学分')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='major_department_students', to='departments.department', verbose_name='主修院系')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='departments.major', verbose_name='专业')),
                ('minor_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='minor_department_students', to='departments.department', verbose_name='辅修院系')),
            ],
            options={
                'verbose_name': '学生档案',
                'verbose_name_plural': '学生档案',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='关联用户账户')),
                ('teacher_id_num', models.CharField(max_length=50, unique=True, verbose_name='教师工号')),
                ('name', models.CharField(max_length=100, verbose_name='教师姓名')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='departments.department', verbose_name='所属院系')),
            ],
            options={
                'verbose_name': '教师档案',
                'verbose_name_plural': '教师档案',
            },
        ),
    ]
